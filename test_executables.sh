#!/bin/bash
# Test executable files generated by build process
# Tests both pixelmug_stdio and pixelmug_interactive executables

echo "üß™ Testing Executable Files"
echo "==========================="
echo ""

# Check if executables exist
if [ ! -f "dist/pixelmug_stdio" ]; then
    echo "‚ùå Error: dist/pixelmug_stdio not found"
    echo "   Please run ./build_exec.sh first to build the executables"
    exit 1
fi



echo "‚úÖ Found both executable files"
echo ""

# Function to test stdio executable
test_stdio_executable() {
    local test_name="$1"
    local request="$2"
    local expected_success="$3"
    
    echo "üìã Test: $test_name"
    echo "Request: $request"
    echo ""
    
    # Test the stdio executable
    echo "Response:"
    if echo "$request" | ./dist/pixelmug_stdio 2>/dev/null; then
        if [ "$expected_success" = "true" ]; then
            echo "‚úÖ Test passed"
        else
            echo "‚ö†Ô∏è  Test completed but expected failure"
        fi
    else
        if [ "$expected_success" = "false" ]; then
            echo "‚úÖ Test passed (expected failure)"
        else
            echo "‚ùå Test failed"
        fi
    fi
    echo ""
    echo "----------------------------------------"
    echo ""
}



echo "üîß Testing Standard I/O Executable (pixelmug_stdio)"
echo "=================================================="
echo ""

# Test 1: Help method
test_stdio_executable "Help method" '{"jsonrpc": "2.0", "method": "help", "params": {}, "id": 1}' "true"

# Test 2: Issue STS method
test_stdio_executable "Issue STS method" '{"jsonrpc": "2.0", "method": "issue_sts", "params": {"product_id": "ABC123DEF", "device_name": "mug_001"}, "id": 2}' "true"

# Test 3: Send pixel image method
test_stdio_executable "Send pixel image method" '{"jsonrpc": "2.0", "method": "send_pixel_image", "params": {"product_id": "ABC123DEF", "device_name": "mug_001", "image_data": [["#FF0000", "#00FF00"], ["#0000FF", "#FFFFFF"]], "target_width": 2, "target_height": 2}, "id": 3}' "true"

# Test 4: Send GIF animation method
test_stdio_executable "Send GIF animation method" '{"jsonrpc": "2.0", "method": "send_gif_animation", "params": {"product_id": "ABC123DEF", "device_name": "mug_001", "gif_data": "R0lGODlhAQABAIAAAAAAAP///yH5BAEAAAAALAAAAAABAAEAAAIBRAA7", "frame_delay": 100, "loop_count": 0, "target_width": 16, "target_height": 16}, "id": 4}' "true"

# Test 5: Convert image to pixels method
test_stdio_executable "Convert image to pixels method" '{"jsonrpc": "2.0", "method": "convert_image_to_pixels", "params": {"image_data": "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==", "target_width": 4, "target_height": 4}, "id": 5}' "true"

# Test 6: Invalid method (should return error)
test_stdio_executable "Invalid method (error handling)" '{"jsonrpc": "2.0", "method": "invalid_method", "params": {}, "id": 6}' "false"

# Test 7: Malformed JSON (should return error)
test_stdio_executable "Malformed JSON (error handling)" '{"jsonrpc": "2.0", "method": "help", "params": {}, "id": 7' "false"


# Check if files are executable
echo "üìã Executable check:"
if [ -x "dist/pixelmug_stdio" ]; then
    echo "‚úÖ pixelmug_stdio is executable"
else
    echo "‚ùå pixelmug_stdio is not executable"
fi


# Test basic functionality with a simple request
echo "üìã Basic functionality test:"
echo "Testing with a simple help request..."
if echo '{"jsonrpc": "2.0", "method": "help", "id": 1}' | ./dist/pixelmug_stdio 2>/dev/null | grep -q "jsonrpc"; then
    echo "‚úÖ Basic functionality test passed"
else
    echo "‚ùå Basic functionality test failed"
fi
echo ""

echo "üéâ Executable testing completed!"
echo "==============================="
echo ""
echo "üìö Usage Examples:"
echo "   # Test Standard I/O mode:"
echo "   echo '{\"jsonrpc\":\"2.0\",\"method\":\"help\",\"id\":1}' | ./dist/pixelmug_stdio"
echo ""
echo "   # Run Interactive mode:"
echo "   ./dist/pixelmug_interactive"
echo ""
echo "   # Test pixel art feature:"
echo "   echo '{\"jsonrpc\":\"2.0\",\"method\":\"send_pixel_image\",\"params\":{\"product_id\":\"ABC123DEF\",\"device_name\":\"mug_001\",\"image_data\":[[\"#FF0000\",\"#00FF00\"],[\"#0000FF\",\"#FFFFFF\"]],\"target_width\":2,\"target_height\":2},\"id\":1}' | ./dist/pixelmug_stdio"
echo ""
echo "‚úÖ All tests completed successfully!"
